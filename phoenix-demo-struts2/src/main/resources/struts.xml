<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Copyright 2016-2020 the original author or authors.
  ~
  ~   Licensed under the Apache License, Version 2.0 (the "License");
  ~   you may not use this file except in compliance with the License.
  ~   You may obtain a copy of the License at
  ~
  ~       QQ:1322874562  PHONE:13882946572
  ~
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  -->

<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
        "http://struts.apache.org/dtds/struts-2.0.dtd">
<struts>

    <!--开发者模式-->
    <constant name="struts.devMode" value="true"></constant>

    <!--国际标准编码-->
    <constant name="struts.i18n.encoding" value="UTF-8"></constant>

    <!--语言-->
    <constant name="struts.locale" value="zh_CN"></constant>

    <!--允许DMI(动态方法调用)-->
    <constant name="struts.enable.DynamicMethodInvocation" value="true"></constant>

    <!--LoginAction，由SupportAction创建，默认调用execute方法-->
    <package name="com.snow.phoenix.demo.struts2" extends="struts-default">

        <!--包拦截器-->
        <interceptors>
            <interceptor name="loginInterceptor" class="com.snow.phoenix.demo.struts2.interceptor.LoginInterceptor"></interceptor>
            <interceptor name="interestInterceptor" class="com.snow.phoenix.demo.struts2.interceptor.InterestInterceptor"></interceptor>
        </interceptors>

        <!--登录action-->
        <action name="login" class="com.snow.phoenix.demo.struts2.action.LoginAction">

            <!--<interceptor-ref name="loginInterceptor"></interceptor-ref>-->
            <!--拦截器为什么要拦截提交-->
            <result>
                /action/login.jsp
            </result>
        </action>

        <!--兴趣action-->
        <action name="interest" class="com.snow.phoenix.demo.struts2.action.InterestAction">
            <interceptor-ref name="interestInterceptor"></interceptor-ref>
            <result>
                /action/interest.jsp
            </result>
        </action>

        <!--国际化action-->
        <action name="national" class="com.snow.phoenix.demo.struts2.i18n.I18nAction">
            <result name="success">
                /i18n/i18n.jsp
            </result>
        </action>

        <!--校验action-->
        <action name="register" class="com.snow.phoenix.demo.struts2.validation.action.RegisterAction">
            <result name="input">/validation/regist.jsp</result>
            <result name="success">/validation/success.jsp</result>
        </action>

    </package>

    <!--
            &lt;!&ndash;UpdateAction，由普通javabean创建，指定method调用&ndash;&gt;
            <package name="com.snow.phoenix.demo.struts2" extends="struts-default">
                <action name="update" class="com.snow.phoenix.demo.struts2.action.LoginAction.UpdateAction" method="updateName">
                    <result name="success">
                        /action/login.jsp
                    </result>
                </action>

                <action name="update" class="com.snow.phoenix.demo.struts2.action.UpdateAction" method="updatePwd">
                    <result name="success">
                        /action/login.jsp
                    </result>
                </action>
            </package>


            &lt;!&ndash;UpdateAction，由普通javabean创建，使用DMI调用，访问连接诸如：
              localhost:8080/update/m1 此方法会调用UpdateAction中的第一个方法，即updateName
              localhost:8080/update/m2 此方法会调用UpdateAction中的第二个方法，即updatePwd
            &ndash;&gt;
            <package name="com.snow.phoenix.demo.struts2" extends="struts-default">
                <action name="update" class="com.snow.phoenix.demo.struts2.action.UpdateAction" method="updateName">
                    <result>
                        /action/login.jsp
                    </result>
                </action>

                <action name="update" class="com.snow.phoenix.demo.struts2.action.UpdateAction" method="updatePwd">
                    <result name="success">
                        /action/login.jsp
                    </result>
                </action>
            </package>

            &lt;!&ndash;UpdateAction，有普通javabean创建，使用通配符调用，访问连接诸如：
            localhost:8080/update/update_Name
            localhost:8080/update/update_Pwd
            &ndash;&gt;
            <package name="com.snow.phoenix.demo.struts2" extends="struts-default">
                <action name="update_*" class="com.snow.phoenix.demo.struts2.action.UpdateAction" method="{1}">
                    <result name="success">
                        /action/login.jsp
                    </result>
                </action>
            </package>

    -->

    <!--result标签中的type属性：

     Dispatcher，跳转到jsp:
     A:请求转发，在jsp中可以使用参数，B:浏览器地址不会改变，C:为默认类型

     Redirect，跳转到jsp
     A：发起一个全新的请求，不能取得参数

     Chain，跳转到action
     A：将请求发送给下一个action，不会丢失参数

     RedirectAction，跳转action
     A：将请求发送给下一个action，但是需要重新发起请求，请求数据会丢失，得不到参数

    -->

</struts>